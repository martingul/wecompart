resources:
- name: src
  type: git
  icon: github
  source:
    uri: git@github.com:martingul/wecompart.git
    branch: main
    private_key: ((private-key))
    private_key_passphrase: ((private-key-passphrase))

# - name: api-image
#   type: docker-image
#   icon: docker
#   source:
#     repository: localhost:5000/api-image
#     insecure_registries: ["http://localhost:5000"]

- name: node-image
  type: registry-image
  icon: node
  source:
    repository: node
    tag: latest

- name: nginx-image
  type: registry-image
  icon: nginx
  source:
    repository: nginx
    tag: latest

jobs:
# - name: api
#   plan:
#   - get: src
#     trigger: true
#   - task: build
#     privileged: true
#     config:
#       platform: linux
#       image_resource:
#         type: registry-image
#         source:
#           repository: concourse/oci-build-task
#       params:
#         CONTEXT: src/api/
#       inputs:
#       - name: src
#       outputs:
#       - name: image
#       caches:
#       - path: cache
#       run:
#         path: build
#   - put: api-image
#     params:
#       import_file: image/image.tar
#   - task: use
#     image: api-image
#     config:
#       platform: linux
#       run:
#         path: python
#         args: ["/api/src/main.py"]
- name: frontend
  plan:
  - get: node-image
  - get: src
    trigger: true
  - task: install
    image: node-image
    config:
      platform: linux
      inputs:
      - name: src
      outputs:
      - name: dependencies
        path: src/frontend/node_modules
      run:
        path: npm
        args: ["ci"]
        dir: src/frontend
  - in_parallel:
    - task: build-js
      image: node-image
      config:
        platform: linux
        inputs:
        - name: src
        - name: dependencies
          path: src/frontend/node_modules
        outputs:
        - name: dist
          path: src/frontend/dist
        run:
          path: npm
          args: ["run", "build:prod"]
          dir: src/frontend
    # - task: build-css
    #   image: node-image
    #   config:
    #     platform: linux
    #     inputs:
    #     - name: src
    #     - name: dependencies
    #       path: src/frontend/node_modules
    #     outputs:
    #     - name: dist
    #       path: src/frontend/dist
    #     run:
    #       path: npm
    #       args: ["run", "build:css"]
    #       dir: src/frontend
  - task: deploy
    privileged: true
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: karlkfi/concourse-dcind
      inputs:
      - name: src
      - name: dist
        path: src/frontend/dist
      run:
        path: entrypoint.sh
        args:
          - bash
          - -ceux
          - |
            docker-compose -f src/cicd/docker-compose.yml restart
  